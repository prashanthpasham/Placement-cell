<?php
/* 
 * Generated by CRUDigniter v1.3 Beta 
 * www.crudigniter.com
 */
 
class Achievement extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Achievement_model');
    }
    
    /*
     * Listing of achievements
     */
    function index()
    {
        $data['achievements'] = $this->Achievements_model->get_all_achievements();
        $this->load->view('achievement/index',$data);
    }
    
    /*
     * Adding new achievements
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('achievement','Achievement','required|max_length[255]');
		$this->form_validation->set_rules('rollno','Rollno','required|max_length[255]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'achievement' => $this->input->post('achievement'),
				'rollno' => $this->input->post('rollno'),
            );
            
            $achievements_id = $this->Achievements_model->add_achievements($params);
            redirect('achievement/index');
        }
        else
        {
            $this->load->view('achievement/add');
        }
    }
    
    /*
     * Editing achievements
     */
    function edit($achid)
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('achievement','Achievement','required|max_length[255]');
		$this->form_validation->set_rules('rollno','Rollno','required|max_length[255]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'achievement' => $this->input->post('achievement'),
				'rollno' => $this->input->post('rollno'),
            );

            $this->Achievements_model->update_achievements($achid,$params);            
            redirect('achievement/index');
        }
        else
        {   
            $data['achievements'] = $this->Achievements_model->get_achievements($achid);
            $this->load->view('achievement/edit',$data);
        }
    }
    
    /*
     * Deleting achievements
     */
    function remove($achid)
    {
        $this->Achievements_model->delete_achievements($achid);
        redirect('achievement/index');
    }
}
?>